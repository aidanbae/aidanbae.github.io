<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>benchmark test on 아이단은 어디갔을까</title>
    <link>https://aidanbae.github.io/tags/benchmark-test/</link>
    <description>Recent content in benchmark test on 아이단은 어디갔을까</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 13 May 2018 09:31:27 +0100</lastBuildDate>
    
	<atom:link href="https://aidanbae.github.io/tags/benchmark-test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang Benchmark Test 사용하기</title>
      <link>https://aidanbae.github.io/code/golang/benchmark/</link>
      <pubDate>Sun, 13 May 2018 09:31:27 +0100</pubDate>
      
      <guid>https://aidanbae.github.io/code/golang/benchmark/</guid>
      <description>Intro 코딩을 하다보면 내가 짠 함수의 성능이 좋은지 안좋은지 궁금할때가 많다. Golang에서는 testing 라이브러리를 기본적으로 제공하면서 유닛테스트를 지원하면서도 성능을 측정할 수 있는 벤치마크 테스트도 제공한다. 게임 쪽을 개발하다보면 최적화의 과정이 필요하기 때문에 benchmark test는 유용하게 사용된다.
 Why golang benchmark test 사용법을 익혀 자신 스스로와 팀원들을 설득할 수 있다.
 Usage 간단하게 두 수를 더하는 함수를 짜고 성능을 측정해보겠다.
package main import ( &amp;#34;testing&amp;#34; ) func Sum(a, b int) int { return a + b } func BenchmarkSum (b *testing.</description>
    </item>
    
  </channel>
</rss>