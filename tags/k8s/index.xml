<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>k8s on 아이단은 어디갔을까</title>
    <link>https://aidanbae.github.io/tags/k8s/</link>
    <description>Recent content in k8s on 아이단은 어디갔을까</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 01 Aug 2020 19:01:14 +0900</lastBuildDate>
    
	<atom:link href="https://aidanbae.github.io/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PLEG(Pod LifeCycle Event Generator)와 kubelet</title>
      <link>https://aidanbae.github.io/code/devops/k8s/pleg/</link>
      <pubDate>Sat, 01 Aug 2020 19:01:14 +0900</pubDate>
      
      <guid>https://aidanbae.github.io/code/devops/k8s/pleg/</guid>
      <description>kubelet architecture 출처: https://programmer.help/blogs/kubelet-source-code-analysis-startup.html
그림처럼 kubelet에는 다양한 컴포넌트들이 하위 고루틴으로 돌아가고있다.
 centos 기준 어떤 특정머신에 이슈가 있을때 가장 자주 쳐보는 명령어
journalctl -xf unit 옵션을 주어서 kubelet 로그만 확인한다.
journalctl -xfu kubelet k8s 머신장애 상황 or not ready 인 상태에서 kubelet 로그들이 가장 활발한 활동을 보여준다.
당연한 이야기이지만 SRE나 인프라 책임이라면 장애시 필요한 로그를 빠르게 확인할 수 있어야한다. 오늘 포스팅에서는 쿠버네티스 클러스터에서 항상 중요 로그를 쏟아내는 kubelet과 그 로그에 종종볼수 있는 PLEG라는 것의 실체를 가볍게 확인해본다.</description>
    </item>
    
  </channel>
</rss>